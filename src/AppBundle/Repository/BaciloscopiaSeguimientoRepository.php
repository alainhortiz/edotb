<?php

namespace AppBundle\Repository;

use AppBundle\Entity\BaciloscopiaSeguimiento;

/**
 * BaciloscopiaSeguimientoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class BaciloscopiaSeguimientoRepository extends \Doctrine\ORM\EntityRepository
{
    public function cantidadBaciloscopiaFinEtapa($idEvolucion)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT  COUNT(bs.id) 
                FROM AppBundle:BaciloscopiaSeguimiento bs
                JOIN bs.pacienteEvolucion e 
                WHERE bs.categoria != :p1
                AND e.id = :p2';
        $query = $em->createQuery($dql);
        $query->setParameter('p1' , 'Seguimiento');
        $query->setParameter('p2' , $idEvolucion);
        $cantidad = $query->getResult();

        return $cantidad[0][1];
    }

    public function agregarBaciloscopiaSeguimiento($data)
    {
        try{
            $em = $this->getEntityManager();
            $baciloscopiaSeguimiento = new BaciloscopiaSeguimiento();
            $baciloscopiaSeguimiento->setFecha( new \DateTime($data['fecha']));
            $baciloscopiaSeguimiento->setCategoria($data['categoria']);

            $baciloscopia = $em->getRepository('AppBundle:Baciloscopia')->findOneBy(array('clasificacion' => $data['baciloscopia']));
            $baciloscopiaSeguimiento->setBaciloscopia($baciloscopia);

            $evolucion = $em->getRepository('AppBundle:PacienteEvolucion')->find($data['idEvolucion']);
            $baciloscopiaSeguimiento->setPacienteEvolucion($evolucion);

            if(($data['categoria'] == 'Cuarto Mes (Segunda Fase)' or $data['categoria'] == 'Sexto Mes (Fin de Tratamiento)') and $data['baciloscopia'] != '0' and $data['baciloscopia'] != 'SB')
            {
                $em->getRepository('AppBundle:PacienteEvolucion')->ponerEnFracasoAlTratamiento($evolucion , $data['fecha']);
            }

            $em->persist($baciloscopiaSeguimiento);
            $em->flush();
            $msg = $baciloscopiaSeguimiento;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al insertar el la baciloscopía';
        }

        return $msg;
    }

    public function modificarBaciloscopiaSeguimiento($data)
    {
        try{
            $em = $this->getEntityManager();
            $baciloscopiaSeguimiento = $em->getRepository('AppBundle:BaciloscopiaSeguimiento')->find($data['idBaciloscopiaSeguimmiento']);
            $evolucion = $baciloscopiaSeguimiento->getPacienteEvolucion();
            $baciloscopia = $em->getRepository('AppBundle:Baciloscopia')->findOneBy(array('clasificacion' => $data['baciloscopia']));
            $baciloscopiaSeguimiento->setBaciloscopia($baciloscopia);

            if(($baciloscopiaSeguimiento->getCategoria() == 'Cuarto Mes (Segunda Fase)' or $baciloscopiaSeguimiento->getCategoria() == 'Sexto Mes (Fin de Tratamiento)') and $data['baciloscopia'] != '0' and $data['baciloscopia'] != 'SB')
            {
                $em->getRepository('AppBundle:PacienteEvolucion')->ponerEnFracasoAlTratamiento($evolucion , $data['fecha']);
            }

            $em->persist($baciloscopiaSeguimiento);
            $em->flush();
            $msg = $baciloscopiaSeguimiento;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el la baciloscopía';
        }

        return $msg;
    }

    public function eliminarBaciloscopiaSeguimiento($idBaciloscopiaSeguimiento)
    {
        try {
            $em = $this->getEntityManager();
            $baciloscopia = $em->getRepository('AppBundle:BaciloscopiaSeguimiento')->find($idBaciloscopiaSeguimiento);

            $em->remove($baciloscopia);
            $em->flush();
            $msg = $baciloscopia;


        } catch (\Exception $e) {

            $msg = 'Se produjo un error al eliminar  la baciloscopía';
        }
        return $msg;
    }


}
