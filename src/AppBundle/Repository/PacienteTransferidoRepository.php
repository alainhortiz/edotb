<?php

namespace AppBundle\Repository;
use AppBundle\Entity\PacienteTransferido;


/**
 * PacienteTransferidoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PacienteTransferidoRepository extends \Doctrine\ORM\EntityRepository
{
    public function agregarPacienteTransferido($data)
    {
        try{
            $em = $this->getEntityManager();
            $nivel = 'unidad';
            $origen = $data['origen'] != null ? $data['origen'] : $data['origenHospital'];
            $destino = $data['destino'] != null ? $data['destino'] : $data['destinoHospital'];
            if($destino->getMunicipio()->getId() != $origen->getMunicipio()->getId()) $nivel = 'municipal';
            if($destino->getMunicipio()->getProvincia()->getId() != $origen->getMunicipio()->getProvincia()->getId()) $nivel = 'provincial';

            $fecha = new \DateTime('now');
            $pacienteTransferido = new PacienteTransferido();
            $pacienteTransferido->setFecha($fecha);
            $pacienteTransferido->setOrigen($data['origen']);
            $pacienteTransferido->setDestino($data['destino']);
            $pacienteTransferido->setOrigenHospital($data['origenHospital']);
            $pacienteTransferido->setDestinoHospital($data['destinoHospital']);
            $pacienteTransferido->setPaciente($data['paciente']);
            $pacienteTransferido->setNivel($nivel);
            $pacienteTransferido->setVisto(0);

            $em->persist($pacienteTransferido);
            $em->flush();
            $msg = $pacienteTransferido;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al hacer la transferencia del paciente';
        }
        return $msg;
    }

    public function cantTransferidos($user)
    {
        $em = $this->getEntityManager();
        $nivelAcceso = $user->getNivelAcceso()->getNivel();

        if($nivelAcceso == 'unidad')
        {
            if($user->getAreaSalud() != null)
            {
                $areaSalud = $user->getAreaSalud()->getCodigo();
            }else{
                $areaSalud = $user->getHospital()->getCodigo();

            }
            $dql = 'SELECT COUNT(t.id) FROM AppBundle:PacienteTransferido t 
                    LEFT JOIN t.origen a LEFT JOIN t.origenHospital h
                    WHERE (a.codigo = :codigo OR h.codigo = :codigo) AND t.visto = 0 AND t.nivel = :nivel';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $areaSalud);
            $query->setParameter('nivel' , 'unidad');
            $result = $query->getResult();
            $cantidad = $result[0][1];
        }
        elseif($nivelAcceso == 'municipal')
        {
            if($user->getAreaSalud() != null)
            {
                $municipio = $user->getAreaSalud()->getMunicipio()->getCodigo();
            }else{
                $municipio = $user->getHospital()->getMunicipio()->getCodigo();

            }
            $dql = 'SELECT COUNT(t.id) FROM AppBundle:PacienteTransferido t 
                    LEFT JOIN t.origen a LEFT JOIN a.municipio am
                    LEFT JOIN t.origenHospital h LEFT JOIN h.municipio hm
                    WHERE (am.codigo = :codigo OR hm.codigo = :codigo) AND t.visto = 0 AND t.nivel = :nivel';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $municipio);
            $query->setParameter('nivel' , 'municipal');
            $result = $query->getResult();
            $cantidad = $result[0][1];
        }
        elseif($nivelAcceso == 'provincial')
        {
            if($user->getAreaSalud() != null)
            {
                $provincia = $user->getAreaSalud()->getMunicipio()->getProvincia()->getCodigo();
            }else{
                $provincia = $user->getHospital()->getMunicipio()->getProvincia()->getCodigo();

            }
            $dql = 'SELECT COUNT(t.id) FROM AppBundle:PacienteTransferido t 
                    LEFT JOIN t.origen a LEFT JOIN a.municipio am LEFT JOIN am.provincia ap
                    LEFT JOIN t.origenHospital h LEFT JOIN h.municipio hm LEFT JOIN hm.provincia hp
                    WHERE (ap.codigo = :codigo OR hp.codigo = :codigo) AND t.visto = 0 AND t.nivel = :nivel';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $provincia);
            $query->setParameter('nivel' , 'provincial');
            $result = $query->getResult();
            $cantidad = $result[0][1];
        }
        else{
            $cantidad = 0;
        }

        return $cantidad;
    }

    public function listarPacientesTransferidos($user)
    {
        $em = $this->getEntityManager();
        $nivelAcceso = $user->getNivelAcceso()->getNivel();

        if($nivelAcceso == 'unidad')
        {
            if($user->getAreaSalud() != null)
            {
                $areaSalud = $user->getAreaSalud()->getCodigo();
            }else{
                $areaSalud = $user->getHospital()->getCodigo();

            }
            $dql = 'SELECT t FROM AppBundle:PacienteTransferido t 
                    LEFT JOIN t.origen a LEFT JOIN t.origenHospital h
                    WHERE (a.codigo = :codigo OR h.codigo = :codigo)  AND t.nivel = :nivel
                    ORDER BY t.fecha DESC ';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $areaSalud);
            $query->setParameter('nivel' , 'unidad');
        }
        elseif($nivelAcceso == 'municipal')
        {
            if(!empty($user->getAreaSalud()))
            {
                $municipio = $user->getAreaSalud()->getMunicipio()->getCodigo();
            }else{
                $municipio = $user->getHospital()->getMunicipio()->getCodigo();

            }
            $dql = 'SELECT t FROM AppBundle:PacienteTransferido t 
                    LEFT JOIN t.origen a LEFT JOIN a.municipio am
                    LEFT JOIN t.origenHospital h LEFT JOIN h.municipio hm
                    WHERE (am.codigo = :codigo OR hm.codigo = :codigo) AND t.nivel = :nivel
                    ORDER BY t.fecha DESC ';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $municipio);
            $query->setParameter('nivel' , 'municipal');
        }
        elseif($nivelAcceso == 'provincial')
        {
            if(!empty($user->getAreaSalud()))
            {
                $provincia = $user->getAreaSalud()->getMunicipio()->getProvincia()->getCodigo();
            }else{
                $provincia = $user->getHospital()->getMunicipio()->getProvincia()->getCodigo();

            }
            $dql = 'SELECT t FROM AppBundle:PacienteTransferido t 
                    LEFT JOIN t.origen a LEFT JOIN a.municipio am LEFT JOIN am.provincia ap
                    LEFT JOIN t.origenHospital h LEFT JOIN h.municipio hm LEFT JOIN hm.provincia hp
                    WHERE (ap.codigo = :codigo OR hp.codigo = :codigo) AND t.nivel = :nivel
                    ORDER BY t.fecha DESC ';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $provincia);
            $query->setParameter('nivel' , 'provincial');
        }
        else{
            $dql = 'SELECT t FROM AppBundle:PacienteTransferido t ORDER BY t.fecha DESC ';
            $query = $em->createQuery($dql);
        }
        $pacientes = $query->getResult();

        foreach ($pacientes as $paciente)
        {
            $paciente->setVisto(1);
            $em->persist($paciente);
        }
        $em->flush();

        return $pacientes;
    }

    public function eliminarPacienteTransferido($idPaciente)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT t FROM AppBundle:PacienteTransferido t JOIN  t.paciente p WHERE p.id = :id';
        $query = $em->createQuery($dql);
        $query->setParameter('id' , $idPaciente);
        $transferidos = $query->getResult();
        foreach ($transferidos as $transferido){ $em->remove($transferido); }
        $em->flush();
    }

    public function listarPacientesTransferidosBorrados()
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT t FROM AppBundle:PacienteTransferido t
                WHERE NOT EXISTS(SELECT e FROM AppBundle:Paciente e WHERE t.paciente = e)';
        $query = $em->createQuery($dql);
        $pacientes = $query->getResult();

        return $pacientes;
    }

    public function eliminarPacienteTransferidoBorrado($idPaciente)
    {
        try{
            $em = $this->getEntityManager();
            $dql = 'SELECT p FROM AppBundle:PacienteTransferido p  WHERE p.id = :id';
            $query = $em->createQuery($dql);
            $query->setParameter('id' , $idPaciente);
            $transferidos = $query->getResult();
            foreach ($transferidos as $transferido){ $em->remove($transferido); }
            $em->flush();
            $msg = $transferidos;

        }catch (\Exception $e){

            $msg = 'Se produjo un error al eliminar el paciente transferido borrado';
        }
        return $msg;
    }
}
