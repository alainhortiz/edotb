<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Hospital;

/**
 * HospitalRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class HospitalRepository extends \Doctrine\ORM\EntityRepository
{

    public function listarHospitalTipo($idTipo)
    {
        $em = $this->getEntityManager();

        $dql = 'SELECT h FROM AppBundle:Hospital h 
                JOIN h.tipoHospistal t 
                WHERE t.id = :p1';
        $query = $em->createQuery($dql);
        $query->setParameter('p1' , $idTipo);
        $hospitales = $query->getResult();

        return $hospitales;
    }

    public function agregarHospital($data)
    {

        try{

            $em = $this->getEntityManager();
            $codigo = $em->getRepository('AppBundle:Hospital')->lastCodigoHospital();
            ++$codigo;
            $hospital = new Hospital();
            $hospital->setNombre($data['nombre']);
            $hospital->setCodigo($codigo);

            $municipio  = $em->getRepository('AppBundle:Municipio')->find($data['idMunicipio']);
            $hospital->setMunicipio($municipio);

            $tipoHospital  = $em->getRepository('AppBundle:TipoHospital')->find($data['idTipoHospital']);
            $hospital->setTipoHospistal($tipoHospital);

            $codigoCompleto = $municipio->getCodigo() . '-' . $tipoHospital->getCodigo() . $codigo;
            $hospital->setCodigoCompleto($codigoCompleto);

            $em->persist($hospital);
            $em->flush();
            $msg = $hospital;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El hospital ya existe , no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el hospital';
            }
        }

        return $msg;
    }

    public function modificarHospital($data)
    {

        try
        {
            $em = $this->getEntityManager();
            $hospital= $em->getRepository('AppBundle:Hospital')->find($data['idHospital']);
            $hospital->setNombre($data['nombre']);

            $municipio  = $em->getRepository('AppBundle:Municipio')->find($data['idMunicipio']);
            $hospital->setMunicipio($municipio);

            $tipoHospital  = $em->getRepository('AppBundle:TipoHospital')->find($data['idTipoHospital']);
            $hospital->setTipoHospistal($tipoHospital);

            $em->persist($hospital);
            $em->flush();
            $msg = $hospital;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el hospital';
        }

        return $msg;
    }

    public function eliminarHospital($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $hospital = $em->getRepository('AppBundle:Hospital')->find($id);

            $em->remove($hospital);
            $em->flush();
            $msg = $hospital;

        }catch (\Exception $e){

            if(strpos($e->getMessage() , 'foreign key') > 0)
            {
                $msg = 'Existen datos asociados a este hospital , no se puede eliminar';
            }
            else
            {
                $msg = 'Se produjo un error al eliminar el hospital';
            }
        }
        return $msg;
    }

    public function lastCodigoHospital()
    {

        $em = $this->getEntityManager();

        $dql = 'SELECT h.codigo
                FROM AppBundle:Hospital h
                WHERE h.id 
                = (SELECT MAX(h1.id)
                FROM AppBundle:Hospital h1)';

        $query = $em->createQuery($dql);

        /** @noinspection OneTimeUseVariablesInspection */
        $codigo = $query->getResult();

        $lastCodigo = count($codigo) == 0 ? 0 : $codigo[0]['codigo'];

        return $lastCodigo;

    }

    public function listarHospitales($user)
    {
        $em = $this->getEntityManager();
        $nivelAcceso = $user->getNivelAcceso()->getNivel();

        if($nivelAcceso == 'nacional')
        {
            $dql = 'SELECT h FROM AppBundle:Hospital h ';
            $query = $em->createQuery($dql);
            $hospital = $query->getResult();
        }
        elseif($nivelAcceso == 'provincial')
        {
            $provincia = $user->getHospital() != null ? $user->getHospital()->getMunicipio()->getProvincia()->getCodigo() : $user->getAreaSalud()->getMunicipio()->getProvincia()->getCodigo();
            $dql = 'SELECT h FROM AppBundle:Hospital h JOIN h.municipio m JOIN m.provincia p
                    WHERE p.codigo = :codigo';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $provincia);
            $hospital = $query->getResult();
        }
        elseif($nivelAcceso == 'municipal')
        {
            $municipio =  $user->getHospital() != null ? $user->getHospital()->getMunicipio()->getCodigo() : $user->getAreaSalud()->getMunicipio()->getCodigo();
            $dql = 'SELECT h FROM AppBundle:Hospital h JOIN h.municipio m
                    WHERE  m.codigo = :codigo';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $municipio);
            $hospital = $query->getResult();
        }
        else
        {
            $hospital[0] = $user->getHospital();
        }
        return $hospital;

    }
}
