<?php

namespace AppBundle\Repository;

use AppBundle\Entity\EsquemaMedicamentos;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * EsquemaMedicamentosRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class EsquemaMedicamentosRepository extends \Doctrine\ORM\EntityRepository
{
    // Agrega uno o mas esquemas de medicamentos a un paciente
    public function agregarEsquemasMedicamentos($esquemas , $pacienteEvolucion)
    {
        try{
            $em = $this->getEntityManager();
            $i = 1;
            foreach ($esquemas as $esquema)
            {
                $esquemaMedicamento = new EsquemaMedicamentos();
                $esquemaMedicamento->setFechaInicio(new \DateTime($esquema['fechaInicioTratamiento']));
                $esquemaMedicamento->setPacienteEvolucion($pacienteEvolucion);
                if($i == count($esquemas))
                {
                    $esquemaMedicamento->setCurrent(true);
                    $pacienteEvolucion->setFechaInicioTrat(new \DateTime($esquema['fechaInicioTratamiento']));
                }
                else $esquemaMedicamento->setCurrent(false);

                $medicamentos = $esquema['medicamentos'];
                foreach ($medicamentos as $idMedicamento)
                {
                    $medicamento = $em->getRepository('AppBundle:MedicamentoPrimeraLinea')->find($idMedicamento);
                    $esquemaMedicamento->addMedicamento($medicamento);
                }
                $em->persist($esquemaMedicamento);
                $i++;
            }
            $em->persist($pacienteEvolucion);
            $em->flush();
            $msg = $esquemaMedicamento;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al insertar el esquema de medicamentos';
        }

        return $msg;
    }

   // no se usa por el momento
    public function eliminarEsquemaMedicamentos($idEsquema)
    {
        try
        {
            $em = $this->getEntityManager();
            $esquema = $em->getRepository('AppBundle:EsquemaMedicamentos')->find($idEsquema);

            $em->remove($esquema);
            $em->flush();
            $msg = $esquema;

        }catch (\Exception $e){

            if(strpos($e->getMessage() , 'foreign key') > 0)
            {
                $msg = 'Existen datos asociados a este Esquema de Medicamentos , no se puede eliminar';
            }
            else
            {
                $msg = 'Se produjo un error al eliminar el Esquema de Medicamentos';
            }

        }
        return $msg;
    }
}
