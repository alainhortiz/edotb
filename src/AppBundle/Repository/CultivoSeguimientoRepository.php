<?php

namespace AppBundle\Repository;

use AppBundle\Entity\CultivoSeguimiento;

/**
 * CultivoSeguimientoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CultivoSeguimientoRepository extends \Doctrine\ORM\EntityRepository
{
    public function cantidadCultivoFinEtapa($idEvolucion)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT  COUNT(cs.id) 
                FROM AppBundle:CultivoSeguimiento cs
                JOIN cs.pacienteEvolucion e 
                WHERE cs.categoria != :p1
                AND e.id = :p2';
        $query = $em->createQuery($dql);
        $query->setParameter('p1' , 'Seguimiento');
        $query->setParameter('p2' , $idEvolucion);
        $cantidad = $query->getResult();

        return $cantidad[0][1];
    }

    public function agregarCultivoSeguimiento($data)
    {
        try{
            $em = $this->getEntityManager();
            $cultivoSeguimiento = new CultivoSeguimiento();
            $cultivoSeguimiento->setFecha( new \DateTime($data['fecha']));
            $cultivoSeguimiento->setCategoria($data['categoria']);

            $cultivo = $em->getRepository('AppBundle:Cultivo')->findOneBy(array('clasificacion' => $data['cultivo']));
            $cultivoSeguimiento->setCultivo($cultivo);

            $salidaCultivo = $em->getRepository('AppBundle:SalidaCultivo')->findOneBy(array('salida' => $data['salidaCultivo']));
            $cultivoSeguimiento->setSalidaCultivo($salidaCultivo);

            $evolucion = $em->getRepository('AppBundle:PacienteEvolucion')->find($data['idEvolucion']);
            $cultivoSeguimiento->setPacienteEvolucion($evolucion);

            if(($data['categoria'] == 'Cuarto Mes (Segunda Fase)' or $data['categoria'] == 'Sexto Mes (Fin de Tratamiento)')
                and $data['cultivo'] != '0' and $data['cultivo'] != 'SC' and $data['salidaCultivo'] == 'Complejo Mycobacterium tuberculosis')
            {
                $em->getRepository('AppBundle:PacienteEvolucion')->ponerEnFracasoAlTratamiento($evolucion , $data['fecha']);
            }

            $em->persist($cultivoSeguimiento);
            $em->flush();
            $msg = $cultivoSeguimiento;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al insertar el  cultivo';
        }

        return $msg;
    }

    public function modificarCultivoSeguimiento($data)
    {
        try{
            $em = $this->getEntityManager();
            $cultivoSeguimiento = $em->getRepository('AppBundle:CultivoSeguimiento')->find($data['idCultivoSeguimiento']);
            $evolucion = $cultivoSeguimiento->getPacienteEvolucion();

            $cultivo = $em->getRepository('AppBundle:Cultivo')->findOneBy(array('clasificacion' => $data['cultivo']));
            $cultivoSeguimiento->setCultivo($cultivo);

            $salidaCultivo = $em->getRepository('AppBundle:SalidaCultivo')->findOneBy(array('salida' => $data['salidaCultivo']));
            $cultivoSeguimiento->setSalidaCultivo($salidaCultivo);

            if(($cultivoSeguimiento->getCategoria() == 'Cuarto Mes (Segunda Fase)' or $cultivoSeguimiento->getCategoria() == 'Sexto Mes (Fin de Tratamiento)')
                and $data['cultivo'] != '0' and $data['cultivo'] != 'SC' and $data['salidaCultivo'] == 'Complejo Mycobacterium tuberculosis')
            {
                $em->getRepository('AppBundle:PacienteEvolucion')->ponerEnFracasoAlTratamiento($evolucion , $data['fecha']);
            }

            $em->persist($cultivoSeguimiento);
            $em->flush();
            $msg = $cultivoSeguimiento;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el  cultivo';
        }

        return $msg;
    }

    public function eliminarCultivoSeguimiento($idCultivoSeguimiento)
    {
        try {
            $em = $this->getEntityManager();
            $cultivo = $em->getRepository('AppBundle:CultivoSeguimiento')->find($idCultivoSeguimiento);

            $em->remove($cultivo);
            $em->flush();
            $msg = $cultivo;


        } catch (\Exception $e) {

            $msg = 'Se produjo un error al eliminar  el cultivo';
        }
        return $msg;
    }
}
