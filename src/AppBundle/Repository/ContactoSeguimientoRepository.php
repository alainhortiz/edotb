<?php

namespace AppBundle\Repository;

use AppBundle\Entity\ContactoSeguimiento;
use DateTime;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * ContactoSeguimientoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactoSeguimientoRepository extends \Doctrine\ORM\EntityRepository
{
    public function agregarContactoSeguimiento($contacto,$data)
    {
        try{
            $em = $this->getEntityManager();
            $contactoSeguimiento = new ContactoSeguimiento();
            $contactoSeguimiento->setEdad($data['edad']);
            $contactoSeguimiento->setFechaNotificacion(new DateTime($data['fechaNotificacion']));
            $contactoSeguimiento->setTelefono($data['telefono']);
            $contactoSeguimiento->setDireccion($data['direccion']);
            $contactoSeguimiento->setIsActive(true);
            $contactoSeguimiento->setContacto($contacto);

            $nivelEducacional = $em->getRepository('AppBundle:NivelEducacional')->find($data['nivelEducacional']);
            $contactoSeguimiento->setNivelEducacional($nivelEducacional);

            $municipio = $em->getRepository('AppBundle:Municipio')->find($data['municipioResid']);
            $contactoSeguimiento->setMunicipio($municipio);

            $contactoOcupaciones = new ArrayCollection();

            foreach ($data['ocupaciones'] as $ocupacion) {
                $contactoOcupaciones[] = $em->getRepository('AppBundle:Ocupacion')->find($ocupacion);
            }
            $contactoSeguimiento->setContactoOcupacion($contactoOcupaciones);

            $em->persist($contactoSeguimiento);
            $em->flush();
            $msg = $contactoSeguimiento;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al insertar el seguimiento de este contacto';
        }
        return $msg;
    }

    public function modificarContactoSeguimiento($data)
    {
        try{
            $em = $this->getEntityManager();
            $contactoSeguimiento = $em->getRepository('AppBundle:ContactoSeguimiento')->find($data['idSeguimiento']);

            if (!empty($contactoSeguimiento)) {
                $contactoSeguimiento->setEdad($data['edad']);
                $contactoSeguimiento->setFechaNotificacion(new DateTime($data['fechaNotificacion']));
                $contactoSeguimiento->setTelefono($data['telefono']);
                $contactoSeguimiento->setDireccion($data['direccion']);
                $contactoSeguimiento->setIsActive(true);

                $nivelEducacional = $em->getRepository('AppBundle:NivelEducacional')->find($data['nivelEducacional']);
                $contactoSeguimiento->setNivelEducacional($nivelEducacional);

                $municipio = $em->getRepository('AppBundle:Municipio')->find($data['municipioResid']);
                $contactoSeguimiento->setMunicipio($municipio);

                foreach ($contactoSeguimiento->getContactoOcupacion() as $ocupacion) {
                    $contactoSeguimiento->removeContactoOcupacion($ocupacion);
                }

                if (is_array($data['ocupaciones'])) {

                    $contactoOcupaciones = new ArrayCollection();

                    foreach ($data['ocupaciones'] as $ocupacion) {
                        $contactoOcupaciones[] = $em->getRepository('AppBundle:Ocupacion')->findOneBy(array('nombre' => $ocupacion));
                    }
                    $contactoSeguimiento->setContactoOcupacion($contactoOcupaciones);
                }

                $em->persist($contactoSeguimiento);
                $em->flush();
                $msg = $contactoSeguimiento;
            }else {
                $msg = $contactoSeguimiento;
            }

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el seguimiento de este contacto';
        }
        return $msg;
    }

    public function cerrarContactoSeguimiento($data)
    {
        try{
            $em = $this->getEntityManager();
            $contactoSeguimiento = $em->getRepository('AppBundle:ContactoSeguimiento')->find($data['idSeguimiento']);

            if (!empty($contactoSeguimiento)) {

                $contactoSeguimiento->setIsActive(false);

                $motivo = $em->getRepository('AppBundle:MotivoCierreContacto')->find($data['motivo']);
                $contactoSeguimiento->setMotivoCierre($motivo);

                $em->persist($contactoSeguimiento);
                $em->flush();
                $msg = $contactoSeguimiento;
            }else {
                $msg = $contactoSeguimiento;
            }

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al cerrar el seguimiento de este contacto';
        }
        return $msg;
    }

}
