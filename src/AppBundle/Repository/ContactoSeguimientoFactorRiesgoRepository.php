<?php

namespace AppBundle\Repository;

use AppBundle\Entity\ContactoSeguimientoFactorRiesgo;
use Doctrine\Common\Collections\ArrayCollection;
use DateTime;

/**
 * ContactoSeguimientoFactorRiesgoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactoSeguimientoFactorRiesgoRepository extends \Doctrine\ORM\EntityRepository
{

    public function agregarContactoSeguimientoFactorRiesgo($seguimiento,$data)
    {
        try{
            $em = $this->getEntityManager();
            $factorRiesgo = new ContactoSeguimientoFactorRiesgo();

            $parentesco = $em->getRepository('AppBundle:Parentesco')->find($data['parentesco']);
            $factorRiesgo->setParantesco($parentesco);

            $factorRiesgo->setVacunado($data['vacunado']);
            $factorRiesgo->setTratadoTB($data['tratadoTB']);

            if($data['tratadoFechaNotificacion'] !== '')
            {
                $factorRiesgo->setFechaTratadoTB(new DateTime($data['tratadoFechaNotificacion']));
            }
            $factorRiesgo->setDiagnosticoVIH($data['diagnosticoVIH']);

            if($data['vihFechaRealizacion'] !== '')
            {
                $factorRiesgo->setFechaRealizacionVIH(new DateTime($data['vihFechaRealizacion']));
            }
            $factorRiesgo->setTarvae($data['tarvae']);

            if($data['vihFechaInicio'] !== '')
            {
                $factorRiesgo->setFechaInicioTarvae(new DateTime($data['vihFechaInicio']));
            }
            $factorRiesgo->setTptTB($data['tptAnterior']);

            if($data['tptFechaInicio'] !== '')
            {
                $factorRiesgo->setFechaInicioTptTB(new DateTime($data['tptFechaInicio']));
            }

            if($data['tptFechaFinal'] !== '')
            {
                $factorRiesgo->setFechaFinalTptTB(new DateTime($data['tptFechaFinal']));
            }

            if($data['medicamento'] !== '0')
            {
                $medicamento = $em->getRepository('AppBundle:MedicamentoPrimeraLinea')->find($data['medicamento']);
                $factorRiesgo->setMedicamento($medicamento);
            }

            if($data['porqueTPT'] !== '')
            {
                $factorRiesgo->setPorqueTPT($data['porqueTPT']);
            }
            $factorRiesgo->setOtroFR($data['otroFactorRiesgo']);

            if (is_array($data['factoresRiesgo'])) {

                $contactoFactores = new ArrayCollection();

                foreach ($data['factoresRiesgo'] as $factor) {
                    $contactoFactores[] = $em->getRepository('AppBundle:FactorRiesgo')->find($factor);
                }
                $factorRiesgo->setContactoFactorRiesgo($contactoFactores);
            }

            if($data['observaciones'] !== '')
            {
                $factorRiesgo->setObservaciones($data['observaciones']);
            }

            $factorRiesgo->setContactoSeguimiento($seguimiento);

            $em->persist($factorRiesgo);
            $em->flush();
            $msg = $factorRiesgo;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al insertar el factor de riesgo de este contacto';
        }
        return $msg;
    }

    public function modificarContactoSeguimientoFactorRiesgo($data)
    {
        try{
            $em = $this->getEntityManager();
            $factorRiesgo = $em->getRepository('AppBundle:ContactoSeguimientoFactorRiesgo')->find($data['idFactorRiesgo']);

            if (!empty($factorRiesgo)) {

                $parentesco = $em->getRepository('AppBundle:Parentesco')->find($data['parentesco']);
                $factorRiesgo->setParantesco($parentesco);

                $factorRiesgo->setVacunado($data['vacunado']);
                $factorRiesgo->setTratadoTB($data['tratadoTB']);

                if ($data['tratadoFechaNotificacion'] !== '') {
                    $factorRiesgo->setFechaTratadoTB(new DateTime($data['tratadoFechaNotificacion']));
                }
                $factorRiesgo->setDiagnosticoVIH($data['diagnosticoVIH']);

                if ($data['vihFechaRealizacion'] !== '') {
                    $factorRiesgo->setFechaRealizacionVIH(new DateTime($data['vihFechaRealizacion']));
                }
                $factorRiesgo->setTarvae($data['tarvae']);

                if ($data['vihFechaInicio'] !== '') {
                    $factorRiesgo->setFechaInicioTarvae(new DateTime($data['vihFechaInicio']));
                }
                $factorRiesgo->setTptTB($data['tptAnterior']);

                if ($data['tptFechaInicio'] !== '') {
                    $factorRiesgo->setFechaInicioTptTB(new DateTime($data['tptFechaInicio']));
                }

                if ($data['tptFechaFinal'] !== '') {
                    $factorRiesgo->setFechaFinalTptTB(new DateTime($data['tptFechaFinal']));
                }

                if ($data['medicamento'] !== '0') {
                    $medicamento = $em->getRepository('AppBundle:MedicamentoPrimeraLinea')->find($data['medicamento']);
                    $factorRiesgo->setMedicamento($medicamento);
                }

                if ($data['porqueTPT'] !== '') {
                    $factorRiesgo->setPorqueTPT($data['porqueTPT']);
                }
                $factorRiesgo->setOtroFR($data['otroFactorRiesgo']);

                foreach ($factorRiesgo->getContactoFactorRiesgo() as $factor) {
                    $factorRiesgo->removeContactoFactorRiesgo($factor);
                }

                if (is_array($data['factoresRiesgo'])) {

                    $contactoFactores = new ArrayCollection();

                    foreach ($data['factoresRiesgo'] as $factor) {
                        $contactoFactores[] = $em->getRepository('AppBundle:FactorRiesgo')->find($factor);
                    }
                    $factorRiesgo->setContactoFactorRiesgo($contactoFactores);
                }

                if ($data['observaciones'] !== '') {
                    $factorRiesgo->setObservaciones($data['observaciones']);
                }

                $em->persist($factorRiesgo);
                $em->flush();
                $msg = $factorRiesgo;
            }else {
                $msg = $factorRiesgo;
            }

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el factor de riesgo de este contacto';
        }
        return $msg;
    }

}
