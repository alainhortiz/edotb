<?php

namespace AppBundle\Repository;

use AppBundle\Entity\ContactoSeguimientoTPT;
use DateTime;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * ContactoSeguimientoTPTRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactoSeguimientoTPTRepository extends \Doctrine\ORM\EntityRepository
{
    public function masterAgregarSeguimientoTPT($data, $user)
    {
        $em = $this->getEntityManager();
        $em->beginTransaction();
        try{

            $seguimiento = $this->obtenerSeguimiento($data['idSeguimiento']);

            if(is_string($seguimiento)) {
                $em->rollback();
                return $seguimiento;
            }

            $tpt = $this->agregarTPT($seguimiento,$data);

            if(is_string($tpt)) {
                $em->rollback();
                return $tpt;
            }

            $dataTraza = array(
                'username' => $user->getUsername(),
                'nombre' => $user->getNombre(),
                'operacion' => 'Insertar Nuevo TPT al contacto',
                'descripcion' => 'Se insertó  el tpt al contacto'
            );

            $em->getRepository('AppBundle:Traza')-> guardarTraza($dataTraza);
            $em->commit();
            $msg = 'ok';

        }catch (\Exception $e){

            $em->rollback();
            $msg = $e->getMessage();
        }
        return $msg;
    }

    public function obtenerSeguimiento($data)
    {
        try {
            $em = $this->getEntityManager();

            $seguimiento = $em->getRepository('AppBundle:ContactoSeguimiento')->find($data);
            $msg = $seguimiento;

        }catch (\Exception $e) {
            $msg = 'Se produjo un error al obtener el seguimiento de este contacto';
        }

        return $msg;
    }

    public function agregarTPT($seguimiento,$data)
    {
        try{
            $em = $this->getEntityManager();
            $tpt = new ContactoSeguimientoTPT();
            $tpt->setPrescripcion($data['prescripcion']);
            $tpt->setPeso($data['peso']);
            $tpt->setTalla($data['talla']);

            if($data['medicamento'] !== '0')
            {
                $medicamento = $em->getRepository('AppBundle:MedicamentoPrimeraLinea')->find($data['medicamento']);
                $tpt->setMedicamento($medicamento);
            }

            if(isset($data['duracion'])) {
                $tpt->setDuracion($data['duracion']);
            }

            if($data['porqueDuracion'] !== '')
            {
                $tpt->setPorqueDuracion($data['porqueDuracion']);
            }

            if($data['fechaPrescripcion'] !== '')
            {
                $tpt->setFechaPrescripcion(new DateTime($data['fechaPrescripcion']));
            }
            $tpt->setIniciacion($data['iniciacion']);
            $tpt->setPersonaNegada($data['personaNegada']);

            if($data['fechaPrimeraDosis'] !== '')
            {
                $tpt->setFechaPrimeraDosis(new DateTime($data['fechaPrimeraDosis']));
            }

            if($data['fechaUltimaDosis'] !== '')
            {
                $tpt->setFechaUltimaDosis(new DateTime($data['fechaUltimaDosis']));
            }

            if(isset($data['regimenPrescrito']))
            {
                $tpt->setRegimenPrescrito($data['regimenPrescrito']);
                $tpt->setNoTabletas($data['noTabletas']);
                $tpt->setNoDias($data['noDias']);
            }
            $tpt->setReaccionAdversa($data['reaccionAdversa']);

            if($data['fechaInicioReaccionAdversa'] !== '')
            {
                $tpt->setFechaInicioReaccionAdversa(new DateTime($data['fechaInicioReaccionAdversa']));
            }

            if($data['fechaFinalReaccionAdversa'] !== '')
            {
                $tpt->setFechaFinalReaccionAdversa(new DateTime($data['fechaFinalReaccionAdversa']));
            }
            $tpt->setProvocoSuspension($data['provocoSuspension']);
            $tpt->setProvocoModificacion($data['provocoModificacion']);
            $tpt->setAdministracion($data['administracion']);
            $tpt->setNoDosisSaltadas($data['noDosisSaltadas']);

            $resultado = $em->getRepository('AppBundle:ResultadoTratamiento')->find($data['resultado']);
            $tpt->setResultado($resultado);

            if($data['causaSuspension'] !== '0') {
                $tpt->setCausaSuspension($data['causaSuspension']);
            }

            if($data['fechaNotificacionTB'] !== '')
            {
                $tpt->setFechaNotificacionTB(new DateTime($data['fechaNotificacionTB']));
                $tpt->setNoRegistro($data['noRegistro']);
            }

            if (is_array($data['contactoCausaNoPrescripcion'])) {

                $contactoCausas = new ArrayCollection();

                foreach ($data['contactoCausaNoPrescripcion'] as $causa) {
                    $contactoCausas[] = $em->getRepository('AppBundle:CausaNoPrescripcionTPT')->find($causa);
                }
                $tpt->setContactoCausaNoPrescripcion($contactoCausas);
            }

            $tpt->setContactoSeguimiento($seguimiento);

            $em->persist($tpt);
            $em->flush();
            $msg = $tpt;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El tpt ya existe en este contacto, no se puede agregar';
            }
            else
            {
                $msg = 'Error al insertar el tpt de este contacto, no se puede agregar';
            }
        }
        return $msg;
    }

    public function masterModificarSeguimientoTPT($data, $user)
    {
        $em = $this->getEntityManager();
        $em->beginTransaction();
        try{

            $tpt = $this->modificarTPT($data);

            if(is_string($tpt)) {
                $em->rollback();
                return $tpt;
            }

            $dataTraza = array(
                'username' => $user->getUsername(),
                'nombre' => $user->getNombre(),
                'operacion' => 'Modificar TPT al contacto',
                'descripcion' => 'Se modificó el tpt al contacto'
            );

            $em->getRepository('AppBundle:Traza')-> guardarTraza($dataTraza);
            $em->commit();
            $msg = 'ok';

        }catch (\Exception $e){

            $em->rollback();
            $msg = $e->getMessage();
        }
        return $msg;
    }

    public function modificarTPT($data)
    {
        try {
            $em = $this->getEntityManager();
            $tpt = $em->getRepository('AppBundle:ContactoSeguimientoTPT')->find($data['idTPT']);

            if (!empty($tpt)) {

                $tpt->setPrescripcion($data['prescripcion']);
                $tpt->setPeso($data['peso']);
                $tpt->setTalla($data['talla']);

                if($data['medicamento'] !== '0')
                {
                    $medicamento = $em->getRepository('AppBundle:MedicamentoPrimeraLinea')->find($data['medicamento']);
                    $tpt->setMedicamento($medicamento);
                }

                if(isset($data['duracion'])) {
                    $tpt->setDuracion($data['duracion']);
                }

                if($data['porqueDuracion'] !== '')
                {
                    $tpt->setPorqueDuracion($data['porqueDuracion']);
                }

                if($data['fechaPrescripcion'] !== '')
                {
                    $tpt->setFechaPrescripcion(new DateTime($data['fechaPrescripcion']));
                }
                $tpt->setIniciacion($data['iniciacion']);
                $tpt->setPersonaNegada($data['personaNegada']);

                if($data['fechaPrimeraDosis'] !== '')
                {
                    $tpt->setFechaPrimeraDosis(new DateTime($data['fechaPrimeraDosis']));
                }

                if($data['fechaUltimaDosis'] !== '')
                {
                    $tpt->setFechaUltimaDosis(new DateTime($data['fechaUltimaDosis']));
                }

                if(isset($data['regimenPrescrito']))
                {
                    $tpt->setRegimenPrescrito($data['regimenPrescrito']);
                    $tpt->setNoTabletas($data['noTabletas']);
                    $tpt->setNoDias($data['noDias']);
                }
                $tpt->setReaccionAdversa($data['reaccionAdversa']);

                if($data['fechaInicioReaccionAdversa'] !== '')
                {
                    $tpt->setFechaInicioReaccionAdversa(new DateTime($data['fechaInicioReaccionAdversa']));
                }

                if($data['fechaFinalReaccionAdversa'] !== '')
                {
                    $tpt->setFechaFinalReaccionAdversa(new DateTime($data['fechaFinalReaccionAdversa']));
                }
                $tpt->setProvocoSuspension($data['provocoSuspension']);
                $tpt->setProvocoModificacion($data['provocoModificacion']);
                $tpt->setAdministracion($data['administracion']);
                $tpt->setNoDosisSaltadas($data['noDosisSaltadas']);

                $resultado = $em->getRepository('AppBundle:ResultadoTratamiento')->find($data['resultado']);
                $tpt->setResultado($resultado);

                if($data['causaSuspension'] !== '0') {
                    $tpt->setCausaSuspension($data['causaSuspension']);
                }

                if($data['fechaNotificacionTB'] !== '')
                {
                    $tpt->setFechaNotificacionTB(new DateTime($data['fechaNotificacionTB']));
                    $tpt->setNoRegistro($data['noRegistro']);
                }

                foreach ($tpt->getContactoCausaNoPrescripcion() as $causa) {
                    $tpt->removeContactoCausaNoPrescripcion($causa);
                }

                if (is_array($data['contactoCausaNoPrescripcion'])) {

                    $contactoCausas = new ArrayCollection();

                    foreach ($data['contactoCausaNoPrescripcion'] as $causa) {
                        $contactoCausas[] = $em->getRepository('AppBundle:CausaNoPrescripcionTPT')->findOneBy(array('nombre' => $causa));
                    }
                    $tpt->setContactoCausaNoPrescripcion($contactoCausas);
                }

                $em->flush();
                $msg = $tpt;
            } else {
                $msg = $tpt;
            }

        } catch (\Exception $e) {
            $msg = $e->getMessage();
        }

        return $msg;
    }

}
