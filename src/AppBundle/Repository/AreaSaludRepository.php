<?php

namespace AppBundle\Repository;
use AppBundle\Entity\AreaSalud;

/**
 * AreaSaludRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AreaSaludRepository extends \Doctrine\ORM\EntityRepository
{
    public function listarAreasSalud($user)
    {
        $em = $this->getEntityManager();
        $nivelAcceso = $user->getNivelAcceso()->getNivel();

        if($nivelAcceso == 'nacional')
        {
            $dql = 'SELECT a FROM AppBundle:AreaSalud a ';
            $query = $em->createQuery($dql);
            $areasSalud = $query->getResult();
        }
        elseif($nivelAcceso == 'provincial')
        {
            $provincia = $user->getHospital() != null ? $user->getHospital()->getMunicipio()->getProvincia()->getCodigo() : $user->getAreaSalud()->getMunicipio()->getProvincia()->getCodigo();
            $dql = 'SELECT a FROM AppBundle:AreaSalud a  JOIN a.municipio m JOIN m.provincia p
                    WHERE p.codigo = :codigo';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $provincia);
            $areasSalud = $query->getResult();
        }
        elseif($nivelAcceso == 'municipal')
        {
            $municipio =  $user->getHospital() != null ? $user->getHospital()->getMunicipio()->getCodigo() : $user->getAreaSalud()->getMunicipio()->getCodigo();
            $dql = 'SELECT a FROM AppBundle:AreaSalud a JOIN a.municipio m
                    WHERE  m.codigo = :codigo';
            $query = $em->createQuery($dql);
            $query->setParameter('codigo' , $municipio);
            $areasSalud = $query->getResult();
        }
        else
        {
            $areasSalud[0] = $user->getHospital() != null ? $user->getHospital() : $user->getAreaSalud();
        }
        return $areasSalud;

    }

    public function  agregarAreaSalud($data)
    {

        try{
            $em = $this->getEntityManager();
            $areaSalud = new AreaSalud();
            $areaSalud->setNombre($data['nombre']);
            $areaSalud->setCodigo($data['codigo']);
            $areaSalud->setIsArea($data['isArea']);

            $municipio  = $em->getRepository('AppBundle:Municipio')->find($data['idMunicipio']);
            $areaSalud->setMunicipio($municipio);

            $tipoAreaSalud  = $em->getRepository('AppBundle:TipoAreaSalud')->find($data['tipoArea']);
            $areaSalud->setTipoAreaSalud($tipoAreaSalud);

            $em->persist($areaSalud);
            $em->flush();
            $msg = $areaSalud;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'La Unidad ya existe , no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el área de salud';
            }
        }

        return $msg;
    }

    public function modificarAreaSalud($data)
    {

        try
        {
            $em = $this->getEntityManager();
            $areaSalud= $em->getRepository('AppBundle:AreaSalud')->find($data['idAreaSalud']);
            $areaSalud->setNombre($data['nombre']);
            $areaSalud->setIsArea($data['isArea']);

            $municipio  = $em->getRepository('AppBundle:Municipio')->find($data['idMunicipio']);
            $areaSalud->setMunicipio($municipio);

            $tipoAreaSalud  = $em->getRepository('AppBundle:TipoAreaSalud')->find($data['tipoArea']);
            $areaSalud->setTipoAreaSalud($tipoAreaSalud);

            $em->persist($areaSalud);
            $em->flush();
            $msg = $areaSalud;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar el área de salud';
        }

        return $msg;
    }

    public function eliminarAreaSalud($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $areaSalud = $em->getRepository('AppBundle:AreaSalud')->find($id);

            $em->remove($areaSalud);
            $em->flush();
            $msg = $areaSalud;

        }catch (\Exception $e){

            if(strpos($e->getMessage() , 'foreign key') > 0)
            {
                $msg = 'Existen datos asociados a esta Unidad , no se puede eliminar';
            }
            else
            {
                $msg = 'Se produjo un error al eliminar el área de salud';
            }
        }
        return $msg;
    }

    //funcion que lista las areas de salud de un municipio
    //solo lista las areas de salud y no las direcciones provinciales , municipales etc
    public function listarAreasSaludMunicipio($idMunicipio)
    {
        $em = $this->getEntityManager();
        $dql = 'SELECT a FROM AppBundle:AreaSalud a JOIN a.municipio m 
                WHERE m.id = :idMunicipio AND a.isArea = 1';
        $query = $em->createQuery($dql);
        $query->setParameter('idMunicipio' , $idMunicipio);
        return $query->getResult();
    }
}
