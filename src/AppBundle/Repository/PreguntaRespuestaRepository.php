<?php

namespace AppBundle\Repository;

use AppBundle\Entity\PreguntaRespuesta;

/**
 * PreguntaRespuestaRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PreguntaRespuestaRepository extends \Doctrine\ORM\EntityRepository
{
    public function agregarPregunta($data)
    {
        try{
            $em = $this->getEntityManager();
            $pregunta = new PreguntaRespuesta();
            $pregunta->setPregunta($data['pregunta']);
            $pregunta->setRespuesta($data['respuesta']);

            $categoriaPregunta  = $em->getRepository('AppBundle:CategoriaPregunta')->find($data['idCategoriaPregunta']);
            $pregunta->setCategoriaPregunta($categoriaPregunta);

            $em->persist($pregunta);
            $em->flush();
            $msg = $pregunta;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'La pregunta ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar la pregunta';
            }
        }

        return $msg;
    }

    public function modificarPregunta($data)
    {
        try
        {
            $em = $this->getEntityManager();
            $pregunta= $em->getRepository('AppBundle:PreguntaRespuesta')->find($data['idPregunta']);
            $pregunta->setPregunta($data['pregunta']);
            $pregunta->setRespuesta($data['respuesta']);

            $categoriaPregunta  = $em->getRepository('AppBundle:CategoriaPregunta')->find($data['idCategoriaPregunta']);
            $pregunta->setCategoriaPregunta($categoriaPregunta);

            $em->persist($pregunta);
            $em->flush();
            $msg = $pregunta;

        }catch (\Exception $e)
        {
            $msg = 'Se produjo un error al modificar la pregunta';
        }

        return $msg;
    }

    public function eliminarPregunta($id)
    {
        try
        {
            $em = $this->getEntityManager();
            $pregunta = $em->getRepository('AppBundle:PreguntaRespuesta')->find($id);

            $em->remove($pregunta);
            $em->flush();
            $msg = $pregunta;

        }catch (\Exception $e){

            if(strpos($e->getMessage() , 'foreign key') > 0)
            {
                $msg = 'Existen datos asociados a esta pregunta, no se puede eliminar';
            }
            else
            {
                $msg = 'Se produjo un error al eliminar la pregunta';
            }
        }
        return $msg;
    }

}
