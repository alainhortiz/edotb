<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Contacto;

/**
 * ContactoRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ContactoRepository extends \Doctrine\ORM\EntityRepository
{
    public function masterAgregarContacto($dataContacto, $dataSeguimiento, $dataFactorRiesgo, $user)
    {
        $em = $this->getEntityManager();
        $em->beginTransaction();
        try{

            $paciente = $this->obtenerPaciente($dataContacto['idPaciente']);

            if(is_string($paciente)) {
                $em->rollback();
                return $paciente;
            }

            $contacto = $this->agregarContacto($paciente,$dataContacto);

            if(is_string($contacto)) {
                $em->rollback();
                return $contacto;
            }

            $contactoSeguimiento = $em->getRepository('AppBundle:ContactoSeguimiento')->agregarContactoSeguimiento($contacto,$dataSeguimiento);

            if(is_string($contactoSeguimiento)) {
                $em->rollback();
                return $contactoSeguimiento;
            }

            $contactoSeguimientoFactorRiesgo = $em->getRepository('AppBundle:ContactoSeguimientoFactorRiesgo')->agregarContactoSeguimientoFactorRiesgo($contactoSeguimiento,$dataFactorRiesgo);

            if(is_string($contactoSeguimientoFactorRiesgo)) {
                $em->rollback();
                return $contactoSeguimientoFactorRiesgo;
            }

            $dataTraza = array(
                'username' => $user->getUsername(),
                'nombre' => $user->getNombre(),
                'operacion' => 'Insertar Nuevo Contacto',
                'descripcion' => 'Se insertó  el contacto de nombre: '.$dataContacto['nombre'].' '.$dataContacto['primerApellido'].' '.$dataContacto['segundoApellido'].' y carnet '.$dataContacto['carnetIdentidad'],
            );

            $em->getRepository('AppBundle:Traza')-> guardarTraza($dataTraza);
            $em->commit();
            $msg = 'ok';

        }catch (\Exception $e){

            $em->rollback();
            $msg = $e->getMessage();
        }
        return $msg;
    }

    public function obtenerPaciente($data)
    {
        try {
            $em = $this->getEntityManager();

            $paciente = $em->getRepository('AppBundle:Paciente')->find($data);
            $msg = $paciente;

            }catch (\Exception $e) {
                $msg = 'Se produjo un error al obtener el paciente';
            }

        return $msg;
    }

    public function agregarContacto($paciente,$data)
    {
        try{
            $em = $this->getEntityManager();
            $contacto = new Contacto();
            $contacto->setCarnetIdentidad($data['carnetIdentidad']);
            $contacto->setNombre(strtoupper($data['nombre']));
            $contacto->setPrimerApellido(strtoupper($data['primerApellido']));
            $contacto->setSegundoApellido(strtoupper($data['segundoApellido']));
            $contacto->setSexo($data['sexo']);
            $contacto->setColorPiel($data['colorPiel']);
            $contacto->setPaciente($paciente);

            $em->persist($contacto);
            $em->flush();
            $msg = $contacto;

        }catch (\Exception $e)
        {
            if(strpos($e->getMessage() , 'Duplicate entry') > 0)
            {
                $msg = 'El contacto ya existe, no se puede agregar';
            }
            else
            {
                $msg = 'Se produjo un error al insertar el contacto';
            }
        }
        return $msg;
    }

    public function masterModificarContacto($dataContacto, $dataSeguimiento, $dataFactorRiesgo, $user)
    {
        $em = $this->getEntityManager();
        $em->beginTransaction();
        try{

            $contacto = $this->modificarContacto($dataContacto);

            if(is_string($contacto)) {
                $em->rollback();
                return $contacto;
            }

            $contactoSeguimiento = $em->getRepository('AppBundle:ContactoSeguimiento')->modificarContactoSeguimiento($dataSeguimiento);

            if(is_string($contactoSeguimiento)) {
                $em->rollback();
                return $contactoSeguimiento;
            }

            $contactoSeguimientoFactorRiesgo = $em->getRepository('AppBundle:ContactoSeguimientoFactorRiesgo')->modificarContactoSeguimientoFactorRiesgo($dataFactorRiesgo);

            if(is_string($contactoSeguimientoFactorRiesgo)) {
                $em->rollback();
                return $contactoSeguimientoFactorRiesgo;
            }

            $dataTraza = array(
                'username' => $user->getUsername(),
                'nombre' => $user->getNombre(),
                'operacion' => 'Modificar Contacto',
                'descripcion' => 'Se modificó  el contacto de nombre: '.$dataContacto['nombre'].' '.$dataContacto['primerApellido'].' '.$dataContacto['segundoApellido'].' y carnet '.$dataContacto['carnetIdentidad'],
            );

            $em->getRepository('AppBundle:Traza')-> guardarTraza($dataTraza);
            $em->commit();
            $msg = 'ok';

        }catch (\Exception $e){

            $em->rollback();
            $msg = $e->getMessage();
        }
        return $msg;
    }

    public function modificarContacto($data)
    {
        try{
            $em = $this->getEntityManager();
            $contacto = $em->getRepository('AppBundle:Contacto')->find($data['idContacto']);

            if (!empty($contacto)) {
                $contacto->setNombre(strtoupper($data['nombre']));
                $contacto->setPrimerApellido(strtoupper($data['primerApellido']));
                $contacto->setSegundoApellido(strtoupper($data['segundoApellido']));
                $contacto->setSexo($data['sexo']);
                $contacto->setColorPiel($data['colorPiel']);

                $em->persist($contacto);
                $em->flush();
                $msg = $contacto;
            }else {
                $msg = $contacto;
            }

        }catch (\Exception $e) {
            $msg = 'Se produjo un error al modificar el contacto';
        }
        return $msg;
    }

}
